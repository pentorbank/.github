name: "Container Build"
description: "Action container build image push to AWS ECR"
inputs:
  aws-region:
    description: AWS Region, e.g. us-east-2
    required: true
  role-to-assume:
    description: The Amazon Resource Name (ARN) of the role to assume. Use the provided credentials to assume an IAM role and configure the Actions environment with the assumed role credentials rather than with the provided credentials.
    required: false
  aws-access-key-id:
    description: AWS Access Key ID. Provide this key if you want to assume a role using access keys rather than a web identity token.
    required: false
  aws-secret-access-key:
    description: AWS Secret Access Key. Required if aws-access-key-id is provided.
    required: false
  repository:
    description: AWS ECR repository name
    required: true
  tag:
    description: "tag versioning"
    required: true
  aqua-username:
    description: "aquasec username"
    required: true
  aqua-password:
    description: "aquasec password"
    required: true
  aqua-scanner-token:
    description: "aquasec scanner token"
    required: true
  aqua-scanner-host:
    description: "aquasec scanner host"
    required: true
  container-scan:
    description: "enable container scan"
    required: false
    default: "true"
outputs:
  image-tag:
    description: "Container image tag"
    value: ${{ steps.container-build.outputs.image }}
runs:
  using: composite
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
        role-to-assume: ${{ inputs.role-to-assume }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and tag image
      shell: bash
      id: container-build
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ${{ inputs.repository }}
        IMAGE_TAG: ${{ inputs.tag }}
      run: |
        docker build --build-arg GOAPP=cmd/api -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        echo "image=$REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Login to AquaSec Container Registry
      if: ${{ inputs.container-scan == 'true' }}
      uses: docker/login-action@v3
      with:
        registry: registry.aquasec.com
        username: ${{ inputs.aqua-username }}
        password: ${{ inputs.aqua-password }}

    - name: Container scan
      if: ${{ inputs.container-scan == 'true' }}
      uses: ./.github/actions/container-scan
      with:
        image-tag: ${{ steps.container-build.outputs.image }}
        aqua-username: ${{ inputs.aqua-username }}
        aqua-password: ${{ inputs.aqua-password }}
        aqua-scanner-token: ${{ inputs.aqua-scanner-token }}
        aqua-scanner-host: ${{ inputs.aqua-scanner-host }}

    - name: Push image to ECR
      shell: bash
      run: |
        docker push "${{ steps.container-build.outputs.image }}"
